on: push
name: Build/Deploy on push
jobs:
  web-deploy:
    name: ðŸ”¨ Build & ðŸš€ Deploy
    runs-on: ubuntu-latest
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v4

    - name: ðŸ“¦ Setup Node 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: ðŸ“„ Copy .env file to build output
      if: github.ref == 'refs/heads/main'
      run: |
        echo "VITE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" > .env
        echo "VITE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
        echo "VITE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
        echo "VITE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
        echo "VITE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "VITE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
        echo "VITE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env

    - name: ðŸ”¨ Build Project
      id: build
      run: |
        npm ci
        npm run build

    - name: âœ… Build successful
      if: steps.build.outcome == 'success'
      run: echo "Build successful"

    - name: ðŸš€ Deploy to FTP server
      id: ftp-deploy
      if: github.ref == 'refs/heads/main'
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_URL }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: dist/
        server-dir: www/
    
    - name: âœ… Deployment successful
      if: steps.ftp-deploy.outcome == 'success'
      run: echo "Successfully deployed to https://www.antoine-podvin.fr"
